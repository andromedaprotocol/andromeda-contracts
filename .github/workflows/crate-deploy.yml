name: Deploy Crates

on:
  release:
    types: [released]
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # Runs at 00:00 UTC every day

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        run: make test

  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-edit
        run: cargo install cargo-edit

      - name: Set version suffix for nightly
        if: github.event_name == 'schedule'
        run: |
          NIGHTLY_VERSION="-nightly.$(date +'%Y%m%d')"
          echo "VERSION_SUFFIX=${NIGHTLY_VERSION}" >> $GITHUB_ENV

      - name: Update version for nightly builds
        if: github.event_name == 'schedule'
        run: |
          for cargo_toml in $(find . -name "Cargo.toml"); do
            # Get current version and replace any existing pre-release tag
            CURRENT_VERSION=$(grep '^version = ' $cargo_toml | sed 's/version = "\(.*\)"/\1/')
            BASE_VERSION=$(echo $CURRENT_VERSION | sed 's/\(-.*\)\?$//')  # Remove any existing pre-release tag
            NEW_VERSION="${BASE_VERSION}${VERSION_SUFFIX}"
            cargo set-version "${NEW_VERSION}" --manifest-path $cargo_toml
          done

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Publish Crates
        uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CRATES_IO_TOKEN }}
          ignore-unpublished-changes: true
