name: Check Version Bump

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]
    branches:
      - development
      - main
    paths:
      - "**/*"

jobs:
  check-version-bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install cargo-workspaces
        run: cargo install cargo-workspaces

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Fetch all branches
        run: git fetch --all

      - name: Get base branch
        id: vars
        run: echo "::set-output name=BASE_BRANCH::${{ github.event.pull_request.base.ref }}"

      - name: Get changed files
        id: changes
        run: |
          echo "Fetching changed files..."
          git diff --name-only origin/${{ steps.vars.outputs.BASE_BRANCH }} > changes.txt
          echo "Changed files:"
          cat changes.txt

      - name: Identify crates
        id: identify-crates
        run: |
          echo "Identifying crates in the workspace"
          crates=$(cargo workspaces list --json | jq -r '.[] | .name')
          echo "Found crates:"
          echo "$crates"
          echo "::set-output name=crates::$crates"

      - name: Check for version bumps
        id: version-bump
        run: |
          # Get the list of crates
          IFS=$'\n' read -rd '' -a crates <<< "${{ steps.identify-crates.outputs.crates }}"

          # Initialize a flag for detecting version bumps
          version_bumped="true"

          # Loop through all crates and check for changes in the crate directory
          for crate in "${crates[@]}"; do
            echo "Checking crate: $crate"
            # Remove leading ./ from crate path if present
            crate=${crate#./}
            # Normalize the crate path for use in the grep command
            crate_path="${crate//\//\\/}"
            # Check if any file within the crate directory has changed
            echo "Searching for changes in crate path: $crate_path"
            if grep -qE "^$crate_path/" changes.txt; then
              echo "Changes detected in $crate"
              # Check if the version has changed in the crate's Cargo.toml
              if git diff origin/${{ steps.vars.outputs.BASE_BRANCH }} -- "$crate/Cargo.toml" | grep -E '^\+version\s*=\s*\"'; then
                echo "Version bumped for $crate"
              else
                echo "::error::Version not bumped for $crate"
                version_bumped="false"
              fi
            else
              echo "No changes detected in $crate"
            fi
          done

          # If any crate had changes and the version was not bumped, fail the job
          if [ "$version_bumped" = "false" ]; then
            echo "Some crates did not have their versions bumped."
            exit 1
          else
            echo "All crates with changes have their versions bumped."
          fi

      - name: Success message
        if: success()
        run: echo "All crates with changes have their versions bumped!"
