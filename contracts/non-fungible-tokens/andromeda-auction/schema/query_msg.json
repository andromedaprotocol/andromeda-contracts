{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "oneOf": [
    {
      "description": "Gets the latest auction state for the given token. This will either be the current auction if there is one in progress or the last completed one.",
      "type": "object",
      "required": [
        "latest_auction_state"
      ],
      "properties": {
        "latest_auction_state": {
          "type": "object",
          "required": [
            "token_address",
            "token_id"
          ],
          "properties": {
            "token_address": {
              "type": "string"
            },
            "token_id": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets the auction state for the given auction id.",
      "type": "object",
      "required": [
        "auction_state"
      ],
      "properties": {
        "auction_state": {
          "type": "object",
          "required": [
            "auction_id"
          ],
          "properties": {
            "auction_id": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets the auction ids for the given token.",
      "type": "object",
      "required": [
        "auction_ids"
      ],
      "properties": {
        "auction_ids": {
          "type": "object",
          "required": [
            "token_address",
            "token_id"
          ],
          "properties": {
            "token_address": {
              "type": "string"
            },
            "token_id": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets all of the auction infos for a given token address.",
      "type": "object",
      "required": [
        "auction_infos_for_address"
      ],
      "properties": {
        "auction_infos_for_address": {
          "type": "object",
          "required": [
            "token_address"
          ],
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "start_after": {
              "type": [
                "string",
                "null"
              ]
            },
            "token_address": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets the bids for the given auction id. Start_after starts indexing at 0.",
      "type": "object",
      "required": [
        "bids"
      ],
      "properties": {
        "bids": {
          "type": "object",
          "required": [
            "auction_id"
          ],
          "properties": {
            "auction_id": {
              "$ref": "#/definitions/Uint128"
            },
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "order_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OrderBy"
                },
                {
                  "type": "null"
                }
              ]
            },
            "start_after": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "owner"
      ],
      "properties": {
        "owner": {
          "type": "object"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "OrderBy": {
      "type": "string",
      "enum": [
        "asc",
        "desc"
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
